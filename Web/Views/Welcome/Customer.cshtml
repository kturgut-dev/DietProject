@using DevExtreme.AspNet.Mvc
@using DietProject.Core.Entities
@using Web.Models
@{
    Layout = "~/Views/Shared/_LayoutWelcomeWizard.cshtml";

    List<LookupEditDataSource> goals = new List<LookupEditDataSource>();
    goals.Add(new LookupEditDataSource("Kilo Vermek", "1"));
    goals.Add(new LookupEditDataSource("Kilo Almak", "2"));
    goals.Add(new LookupEditDataSource("Kiloyu Korumak", "3"));
}

@model DateLookupDataSource;
<style>
    * {
        margin: 0;
        padding: 0
    }

    html {
        height: 100%
    }

    #grad1 {
        /*background-color: : #9C27B0;
                                                                                                                                                                                        background-image: linear-gradient(120deg, #FF4081, #81D4FA)*/
        border: 1px solid #ddd;
    }

    #msform {
        text-align: center;
        position: relative;
        margin-top: 20px
    }

        #msform fieldset .form-card {
            background: white;
            border: 0 none;
            border-radius: 0px;
            box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.2);
            padding: 20px 40px 30px 40px;
            box-sizing: border-box;
            width: 94%;
            margin: 0 3% 20px 3%;
            position: relative
        }

        #msform fieldset {
            background: white;
            border: 0 none;
            border-radius: 0.5rem;
            box-sizing: border-box;
            width: 100%;
            margin: 0;
            padding-bottom: 20px;
            position: relative
        }

            #msform fieldset:not(:first-of-type) {
                display: none
            }

            #msform fieldset .form-card {
                text-align: left;
                color: #9E9E9E
            }

        #msform input,
        #msform textarea {
            padding: 0px 8px 4px 8px;
            border: none;
            border-bottom: 1px solid #ccc;
            border-radius: 0px;
            margin-bottom: 25px;
            margin-top: 2px;
            width: 100%;
            box-sizing: border-box;
            font-family: montserrat;
            color: #2C3E50;
            font-size: 16px;
            letter-spacing: 1px
        }

            #msform input:focus,
            #msform textarea:focus {
                -moz-box-shadow: none !important;
                -webkit-box-shadow: none !important;
                box-shadow: none !important;
                border: none;
                font-weight: bold;
                border-bottom: 2px solid skyblue;
                outline-width: 0
            }

        #msform .action-button {
            width: 100px;
            background: skyblue;
            font-weight: bold;
            color: white;
            border: 0 none;
            border-radius: 0px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px
        }

            #msform .action-button:hover,
            #msform .action-button:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px skyblue
            }

        #msform .action-button-previous {
            width: 100px;
            background: #616161;
            font-weight: bold;
            color: white;
            border: 0 none;
            border-radius: 0px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px
        }

            #msform .action-button-previous:hover,
            #msform .action-button-previous:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #616161
            }

    select.list-dt {
        border: none;
        outline: 0;
        border-bottom: 1px solid #ccc;
        padding: 2px 5px 3px 5px;
        margin: 2px
    }

        select.list-dt:focus {
            border-bottom: 2px solid skyblue
        }

    .card {
        z-index: 0;
        border: none;
        border-radius: 0.5rem;
        position: relative
    }

    .fs-title {
        font-size: 25px;
        color: #2C3E50;
        margin-bottom: 10px;
        font-weight: bold;
        text-align: left
    }

    #progressbar {
        margin-bottom: 30px;
        overflow: hidden;
        color: lightgrey
    }

        #progressbar .active {
            /*color: #000000*/
            color: var(--primary-color);
        }

        #progressbar li {
            list-style-type: none;
            font-size: 12px;
            width: 25%;
            float: left;
            position: relative
        }

        #progressbar #age:before {
            font-family: FontAwesome;
            content: "\f073"
        }

        #progressbar #boyandkilo:before {
            font-family: FontAwesome;
            content: "\f184"
        }

        #progressbar #alergenicfoods:before {
            font-family: FontAwesome;
            content: "\f0f5"
        }

        #progressbar #goals:before {
            font-family: FontAwesome;
            content: "\f18e"
        }

        #progressbar #doneForm:before {
            font-family: FontAwesome;
            content: "\f00c"
        }

        #progressbar li:before {
            width: 50px;
            height: 50px;
            line-height: 45px;
            display: block;
            font-size: 18px;
            color: #ffffff;
            background: lightgray;
            border-radius: 50%;
            margin: 0 auto 10px auto;
            padding: 2px
        }

        #progressbar li:after {
            content: '';
            width: 100%;
            height: 2px;
            background: lightgray;
            position: absolute;
            left: 0;
            top: 25px;
            z-index: -1
        }

        #progressbar li.active:before,
        #progressbar li.active:after {
            background: var(--primary-color);
        }

    .radio-group {
        position: relative;
        margin-bottom: 25px
    }

    .radio {
        display: inline-block;
        width: 204;
        height: 104;
        border-radius: 0;
        background: lightblue;
        box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.2);
        box-sizing: border-box;
        cursor: pointer;
        margin: 8px 2px
    }

        .radio:hover {
            box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3)
        }

        .radio.selected {
            box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.1)
        }

    .fit-image {
        width: 100%;
        object-fit: cover
    }
</style>

<!-- MultiStep Form -->
<div class="container-fluid" id="grad1">
    <div class="row justify-content-center mt-0">
        <div class="col-12 col-sm-9 col-md-7 col-lg-6 text-center p-0 mt-3 mb-2">
            <div class="card px-0 pt-4 pb-0 mt-3 mb-3">
                <div class="alert alert-danger" id="errs"></div>
                <h2><strong>Hoşgeldiniz</strong></h2>
                <p>Lütfen hesap kurulumunuzu tamamlayınız.</p>
                <div class="row">
                    <div class="col-md-12 mx-0">
                        <form id="msform" method="post" action=@Url.ActionLink("Customer","Welcome")>
                            <!-- progressbar -->
                            <ul id="progressbar">
                                <li class="active" id="age"><strong>Doğum Tarihi</strong></li>
                                <li id="boyandkilo"><strong>Boy /Kilo</strong></li>
                                <li id="alergenicfoods"><strong>Alerjenler</strong></li>
                                <li id="goals"><strong>Hedef</strong></li>
                            </ul> <!-- fieldsets -->
                            <fieldset data-id="age">
                                <div class="form-card">
                                    <div class="row">
                                        <div class="col-4">
                                            @(Html.DevExtreme()
                                            .Lookup()
                                            .DataSource(Model.Days)
                                            .DisplayExpr("Display")
                                            .ValueExpr("Value")
                                            .Value(1)
                                            .Name("BirthDay")
                                            .Label("Gün"))
                                        </div>
                                        <div class="col-4">
                                            @(Html.DevExtreme()
                                            .Lookup()
                                            .DataSource(Model.Months)
                                            .DisplayExpr("Display")
                                            .ValueExpr("Value")
                                            .Value(1)
                                            .Name("BirthMonth")
                                            .Label("Ay"))
                                        </div>
                                        <div class="col-4">
                                            @(Html.DevExtreme()
                                            .Lookup()
                                            .DisplayExpr("Display")
                                            .ValueExpr("Value")
                                            .DataSource(Model.Years)
                                            .Value(DateTime.Now.AddYears(-10).Year)
                                            .Name("BirthYear")
                                            .Label("Yıl"))
                                        </div>
                                    </div>
                                </div>
                                <input type="button" name="next" class="next btn btn-primary text-white p-3 rounded" value="Sonraki Adım" />
                            </fieldset>
                            <fieldset data-id="boyandkilo">
                                <div class="form-card">
                                    <div class="row">
                                        <div class="col-6">
                                            @(Html.DevExtreme()
                                            .NumberBox()
                                            .Min(100)
                                            .Max(220)
                                            .Value(150)
                                            .Name("Height")
                                            .ShowSpinButtons(true)
                                            .Label("Boy"))
                                        </div>
                                        <div class="col-6">
                                            @(Html.DevExtreme()
                                            .NumberBox()
                                            .Min(25)
                                            .Max(500)
                                            .Value(75)
                                            .Name("Weight")
                                            .ShowSpinButtons(true)
                                            .Label("Kilo"))
                                        </div>
                                    </div>
                                </div>
                                <input type="button" name="previous" class="previous btn btn-secondary text-white p-3 rounded" value="Önceki Adım" />
                                <input type="button" name="next" class="next btn btn-primary text-white p-3 rounded" value="Sonraki Adım" />
                            </fieldset>
                            <fieldset data-id="alergenicfoods">
                                <div class="form-card">
                                    <div class="row">
                                        @(Html.DevExtreme()
                                        .TextArea()
                                        .Height(250)
                                        .Name("AllergenicFood")
                                        .Label("Alerjiniz Bulunan Gıdalar"))
                                    </div>
                                </div>
                                <input type="button" name="previous" class="previous btn btn-secondary text-white p-3 rounded" value="Önceki Adım" />
                                <input type="button" name="next" class="next btn btn-primary text-white p-3 rounded" value="Sonraki Adım" />
                            </fieldset>
                            <fieldset data-id="goals">
                                <div class="form-card">
                                    <div class="row justify-content-center">
                                        <div class="row">
                                            @(Html.DevExtreme()
                                            .RadioGroup()
                                            .DataSource(goals)
                                            .DisplayExpr("Display")
                                            .ValueExpr("Display")
                                            .Name("Goal"))
                                        </div>
                                    </div>
                                </div>
                                <input type="button" name="previous" class="previous btn btn-secondary text-white p-3 rounded" value="Önceki Adım" />
                                <input type="submit" id="doneFormAndSubmitfunc" name="next" class="btn btn-primary text-white p-3 rounded finishForm" value="Bitir" />
                            </fieldset>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
         $(document).ready(function() {

    var current_fs, next_fs, previous_fs; //fieldsets
    var opacity;

    $(".next").click(function() {

      current_fs = $(this).parent();
        next_fs = $(this).parent().next();

        //Add Class Active
        $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

        //show the next fieldset
        next_fs.show();
        //hide the current fieldset with style
        current_fs.animate({
            opacity: 0
        }, {
            step: function(now) {
                // for making fielset appear animation
                opacity = 1 - now;

                current_fs.css({
                    'display': 'none',
                    'position': 'relative'
                });
                next_fs.css({
                    'opacity': opacity
                });
            },
            duration: 600
        });
    });

    $(".previous").click(function() {

        current_fs = $(this).parent();
        previous_fs = $(this).parent().prev();

        //Remove class active
        $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

        //show the previous fieldset
        previous_fs.show();

        //hide the current fieldset with style
        current_fs.animate({
            opacity: 0
        }, {
            step: function(now) {
                // for making fielset appear animation
                opacity = 1 - now;

                current_fs.css({
                    'display': 'none',
                    'position': 'relative'
                });
                previous_fs.css({
                    'opacity': opacity
                });
            },
            duration: 600
        });
    });

    $('.radio-group .radio').click(function() {
        $(this).parent().find('.radio').removeClass('selected');
        $(this).addClass('selected');
    });


    $("form").on("submit", function(event) {

        event.preventDefault();
        var serializedData = $(this).serialize();
        axios.post('@Url.ActionLink("Customer","Welcome")', serializedData)
            .then(res => {
                console.log(res.data)

                if (res.data.IsSuccess) {

                    let timerInterval
                    Swal.fire({
                        title: 'Teşekkür ederiz!',
                        html: res.data.Message,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading()
                            //const b = Swal.getHtmlContainer().querySelector('b')
                            timerInterval = setInterval(() => {
                                //b.textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        willClose: () => {
                            clearInterval(timerInterval)
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {
                            window.location.href = res.data.RedirectUrl;
                        }
                    })

                }else{
                    $( "#errs" ).html("");
                    $( "#errs" ).html( res.data.Errors);
                }


            });
    });

                    });
</script>